[actor2] ACTOR_STARTING - current state:
[actor1] ACTOR_STARTING - current state:
[actor2] AFTER java.lang.invoke.VarHandle.set (CopyConcurrentLinkedDeque.java:307) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque.head (CopyConcurrentLinkedDeque.java:319) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque.head (CopyConcurrentLinkedDeque.java:712) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:320) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:320) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.next (CopyConcurrentLinkedDeque.java:325) - current state:
[actor2] AFTER java.lang.invoke.VarHandle.set (CopyConcurrentLinkedDeque.java:329) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:713) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:713) - current state:
[actor1] AFTER java.lang.invoke.VarHandle.compareAndSet (CopyConcurrentLinkedDeque.java:721) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.item (CopyConcurrentLinkedDeque.java:917) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:919) - current state:
[actor2] AFTER java.lang.invoke.VarHandle.compareAndSet (CopyConcurrentLinkedDeque.java:330) - current state:
[actor2] AFTER java.lang.invoke.VarHandle.weakCompareAndSet (CopyConcurrentLinkedDeque.java:335) - current state:
[actor2] ManualCheckpoint (DequeTest.java:49) - current state: [ 2 1 ]
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque.tail (CopyConcurrentLinkedDeque.java:737) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.next (CopyConcurrentLinkedDeque.java:738) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.item (CopyConcurrentLinkedDeque.java:888) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:889) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.item (CopyConcurrentLinkedDeque.java:888) - current state:
[actor2] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.next (CopyConcurrentLinkedDeque.java:894) - current state:
[actor2] ACTOR_FINISHING - current state: actor_finished
[actor1] AFTER java.lang.invoke.VarHandle.compareAndSet (CopyConcurrentLinkedDeque.java:920) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:386) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.next (CopyConcurrentLinkedDeque.java:387) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.item (CopyConcurrentLinkedDeque.java:418) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.item (CopyConcurrentLinkedDeque.java:439) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.next (CopyConcurrentLinkedDeque.java:444) - current state:
[actor1] AFTER  read linkeddeque.CopyConcurrentLinkedDeque$CopyNode.prev (CopyConcurrentLinkedDeque.java:446) - current state:
[actor1] ACTOR_FINISHING - current state: actor_finished
[MONITOR] INFO  c.runner.ActorSchedulerSetup - histories: 55113, average depth: 36,43, average run time: 1,71ms - total histories: 15325823, running threads: 0, cpu usage: -1496,28 gc: 0,06